CCS PCM C Compiler, Version 4.114, 93471994               28-mar-12 20:05

               Filename: Z:\AlarmaBateria\main.lst

               ROM used: 128 words (3%)
                         Largest free fragment is 2048
               RAM used: 9 (2%) at main() level
                         10 (3%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   043
0003:  NOP
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES INTRC                    //Internal RC Osc 
.................... #FUSES NOMCLR                   //Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
....................  
.................... #use delay(int=8000000) 
*
0011:  MOVLW  24
0012:  MOVWF  04
0013:  BCF    03.7
0014:  MOVF   00,W
0015:  BTFSC  03.2
0016:  GOTO   024
0017:  MOVLW  02
0018:  MOVWF  78
0019:  CLRF   77
001A:  DECFSZ 77,F
001B:  GOTO   01A
001C:  DECFSZ 78,F
001D:  GOTO   019
001E:  MOVLW  97
001F:  MOVWF  77
0020:  DECFSZ 77,F
0021:  GOTO   020
0022:  DECFSZ 00,F
0023:  GOTO   017
0024:  RETURN
....................  
.................... #define BUZZER PIN_B3 
.................... #define LED1 PIN_B0 
.................... #define LED2 PIN_B1 
.................... #define LED3 PIN_B2 
....................  
.................... //Definimos Aleas a algunas funciones basicas 
.................... #define LED1ON output_low (LED1) 
.................... #define LED1OFF output_high (LED1) 
.................... #define LED2ON output_low (LED2) 
.................... #define LED2OFF output_high (LED2) 
.................... #define LED3ON output_low (LED3) 
.................... #define LED3OFF output_high (LED3) 
.................... int i; 
.................... long ret; 
.................... void alarma(){ 
....................    FOR (ret = 0;ret <= 250; ret++){ 
....................       output_low (BUZZER); 
....................       delay_us (2000); 
....................       output_high (BUZZER); 
....................       delay_us (2000); 
....................    } 
.................... } 
.................... void ALLOFF(){ 
....................    LED1OFF; 
*
0004:  BSF    03.5
0005:  BCF    06.0
0006:  BCF    03.5
0007:  BSF    06.0
....................    LED2OFF; 
0008:  BSF    03.5
0009:  BCF    06.1
000A:  BCF    03.5
000B:  BSF    06.1
....................    LED3OFF; 
000C:  BSF    03.5
000D:  BCF    06.2
000E:  BCF    03.5
000F:  BSF    06.2
.................... } 
0010:  RETURN
.................... void ALLON(){ 
....................    LED1ON; 
*
002C:  BSF    03.5
002D:  BCF    06.0
002E:  BCF    03.5
002F:  BCF    06.0
....................    LED2ON; 
0030:  BSF    03.5
0031:  BCF    06.1
0032:  BCF    03.5
0033:  BCF    06.1
....................    LED3ON; 
0034:  BSF    03.5
0035:  BCF    06.2
0036:  BCF    03.5
0037:  BCF    06.2
.................... } 
.................... void iniciarleds(){ 
*
0025:  MOVLW  64
0026:  MOVWF  23
....................    int tempo = 100; 
....................    for(i=0;i<=4;i++){ 
0027:  CLRF   20
0028:  MOVF   20,W
0029:  SUBLW  04
002A:  BTFSS  03.0
002B:  GOTO   041
....................       ALLON(); 
....................       delay_ms(tempo); 
*
0038:  MOVF   23,W
0039:  MOVWF  24
003A:  CALL   011
....................       ALLOFF(); 
003B:  CALL   004
....................       delay_ms(tempo); 
003C:  MOVF   23,W
003D:  MOVWF  24
003E:  CALL   011
....................    } 
003F:  INCF   20,F
0040:  GOTO   028
.................... } 
0041:  BCF    0A.3
0042:  GOTO   055 (RETURN)
.................... void main(){ 
0043:  CLRF   04
0044:  BCF    03.7
0045:  MOVLW  1F
0046:  ANDWF  03,F
0047:  MOVLW  72
0048:  BSF    03.5
0049:  MOVWF  0F
004A:  MOVF   0F,W
004B:  BCF    1F.4
004C:  BCF    1F.5
004D:  MOVF   1B,W
004E:  ANDLW  80
004F:  MOVWF  1B
0050:  MOVLW  07
0051:  MOVWF  1C
....................    ALLOFF(); 
0052:  BCF    03.5
0053:  CALL   004
....................    iniciarleds(); 
0054:  GOTO   025
....................    WHILE (true){ 
....................       LED1ON; 
0055:  BSF    03.5
0056:  BCF    06.0
0057:  BCF    03.5
0058:  BCF    06.0
....................       delay_ms(1000);      
0059:  MOVLW  04
005A:  MOVWF  23
005B:  MOVLW  FA
005C:  MOVWF  24
005D:  CALL   011
005E:  DECFSZ 23,F
005F:  GOTO   05B
....................       LED2ON; 
0060:  BSF    03.5
0061:  BCF    06.1
0062:  BCF    03.5
0063:  BCF    06.1
....................       delay_ms(1000);         
0064:  MOVLW  04
0065:  MOVWF  23
0066:  MOVLW  FA
0067:  MOVWF  24
0068:  CALL   011
0069:  DECFSZ 23,F
006A:  GOTO   066
....................       LED3ON; 
006B:  BSF    03.5
006C:  BCF    06.2
006D:  BCF    03.5
006E:  BCF    06.2
....................       delay_ms(1000); 
006F:  MOVLW  04
0070:  MOVWF  23
0071:  MOVLW  FA
0072:  MOVWF  24
0073:  CALL   011
0074:  DECFSZ 23,F
0075:  GOTO   071
....................       ALLOFF(); 
0076:  CALL   004
....................       delay_ms(1000); 
0077:  MOVLW  04
0078:  MOVWF  23
0079:  MOVLW  FA
007A:  MOVWF  24
007B:  CALL   011
007C:  DECFSZ 23,F
007D:  GOTO   079
....................    } 
007E:  GOTO   055
.................... } 
....................  
007F:  SLEEP

Configuration Fuses:
   Word  1: 3F18   NOWDT NOPUT INTRC_IO NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
