CCS PCM C Compiler, Version 4.114, 93471994               28-mar-12 12:34

               Filename: Z:\AlarmaBateria\main.lst

               ROM used: 65 words (2%)
                         Largest free fragment is 2048
               RAM used: 5 (1%) at main() level
                         6 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F88.H>  
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
.................... //#device adc=8 
.................... #FUSES INTRC, NOWDT, NOLVP, NOCPD, NOWRT, NODEBUG, NOPROTECT, NOFCMEN, NOIESO  
.................... #FUSES NOMCLR, NOBROWNOUT, CCPB3 
.................... #use delay(clock=8000000)  
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  GOTO   03F (RETURN)
.................... //#use fast_io(a)  
.................... #use fast_io(b) 
.................... #byte porta=0x05 /* 
.................... #define CELDA1_LED PIN_B0 
.................... #define CELDA2_LED PIN_B1 
.................... #define CELDA3_LED PIN_B2 
....................  
....................    INT celda1; 
....................    INT celda2; 
....................    INT celda3;*/ 
....................  
.................... void main(){ 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  MOVLW  72
001E:  BSF    03.5
001F:  MOVWF  0F
0020:  MOVF   0F,W
0021:  BCF    1F.4
0022:  BCF    1F.5
0023:  MOVF   1B,W
0024:  ANDLW  80
0025:  MOVWF  1B
0026:  MOVLW  07
0027:  MOVWF  1C
....................    //porta = 0; 
....................    //set_tris_a (0xff); 
....................    set_tris_b (0x00); // 
0028:  MOVLW  00
0029:  MOVWF  06
....................    //setup_adc_ports (ALL_ANALOG) ; 
....................    //setup_adc (adc_clock_div_8); 
....................     
....................    setup_ccp1(ccp_pwm);  
002A:  BCF    03.5
002B:  BCF    06.3
002C:  MOVLW  0C
002D:  MOVWF  17
....................    setup_timer_2(t2_div_by_1,124,1);  
002E:  MOVLW  00
002F:  MOVWF  78
0030:  IORLW  04
0031:  MOVWF  12
0032:  MOVLW  7C
0033:  BSF    03.5
0034:  MOVWF  12
....................    set_pwm1_duty(0); 
0035:  BCF    03.5
0036:  CLRF   15
....................    WHILE (1){ 
....................       // inicio bucle infinito    
....................       /*set_adc_channel (0); 
....................       delay_ms (10) ; 
....................       celda1 = read_adc (); 
....................       set_adc_channel (1); 
....................       delay_ms (10) ; 
....................       celda2 = read_adc (); 
....................       set_adc_channel (2); 
....................       delay_ms (10) ; 
....................       celda3 = read_adc (); 
....................       if (celda1 <= 168){ 
....................           output_low(CELDA1_LED); 
....................       }else{ 
....................           output_high(CELDA1_LED); 
....................       } 
....................       if (celda2 <= 168){ 
....................           output_low(CELDA2_LED); 
....................       }else{ 
....................           output_high(CELDA2_LED); 
....................       } 
....................       if (celda3 <= 168){ 
....................           output_low(CELDA3_LED); 
....................           set_pwm1_duty(512); 
....................       }else{ 
....................           output_high(CELDA3_LED); 
....................           set_pwm1_duty(0); 
....................       } 
....................       if ((celda1 <= 168)||(celda2 <= 168)||(celda3 <= 168)){*/ 
....................           set_pwm1_duty(512); 
0037:  MOVLW  80
0038:  MOVWF  15
0039:  MOVF   17,W
003A:  ANDLW  CF
003B:  MOVWF  17
....................       /*}else{ 
....................           set_pwm1_duty(0); 
....................       }*/       
....................       delay_ms (10); 
003C:  MOVLW  0A
003D:  MOVWF  21
003E:  GOTO   004
....................    } 
003F:  GOTO   037
.................... } 
0040:  SLEEP

Configuration Fuses:
   Word  1: 2F11   NOWDT PUT INTRC NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB3 NOPROTECT
   Word  2: 3FFC   NOFCMEN NOIESO
