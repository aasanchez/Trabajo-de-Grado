CCS PCM C Compiler, Version 4.114, 93471994               28-mar-12 16:14

               Filename: Z:\Pruebas\16f88\main.lst

               ROM used: 79 words (2%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         9 (2%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   035
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES INTRC                    //Internal RC Osc 
.................... #FUSES NOMCLR                   //Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
....................  
.................... #use delay(int=8000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
....................  
....................  
.................... #define BUZZER PIN_B3 
....................  
.................... long ret; 
.................... void alarma(){ 
....................    FOR (ret = 0;ret <= 250; ret++){ 
0018:  CLRF   21
0019:  CLRF   20
001A:  MOVF   21,F
001B:  BTFSS  03.2
001C:  GOTO   033
001D:  MOVF   20,W
001E:  SUBLW  FA
001F:  BTFSS  03.0
0020:  GOTO   033
....................       output_low (BUZZER); 
0021:  BSF    03.5
0022:  BCF    06.3
0023:  BCF    03.5
0024:  BCF    06.3
....................       delay_us (2000); 
0025:  MOVLW  02
0026:  MOVWF  23
0027:  CALL   004
....................       output_high (BUZZER); 
0028:  BSF    03.5
0029:  BCF    06.3
002A:  BCF    03.5
002B:  BSF    06.3
....................       delay_us (2000); 
002C:  MOVLW  02
002D:  MOVWF  23
002E:  CALL   004
....................    } 
002F:  INCF   20,F
0030:  BTFSC  03.2
0031:  INCF   21,F
0032:  GOTO   01A
.................... } 
0033:  BCF    0A.3
0034:  GOTO   046 (RETURN)
....................  
.................... void main(){ 
0035:  CLRF   04
0036:  BCF    03.7
0037:  MOVLW  1F
0038:  ANDWF  03,F
0039:  MOVLW  72
003A:  BSF    03.5
003B:  MOVWF  0F
003C:  MOVF   0F,W
003D:  BCF    1F.4
003E:  BCF    1F.5
003F:  MOVF   1B,W
0040:  ANDLW  80
0041:  MOVWF  1B
0042:  MOVLW  07
0043:  MOVWF  1C
....................    WHILE (true){ 
....................       //FOR (i = 0; i <= 4; i++){ 
....................          alarma(); 
0044:  BCF    03.5
0045:  GOTO   018
....................          delay_ms (1000); 
0046:  MOVLW  04
0047:  MOVWF  22
0048:  MOVLW  FA
0049:  MOVWF  23
004A:  CALL   004
004B:  DECFSZ 22,F
004C:  GOTO   048
....................       //} 
....................    } 
004D:  GOTO   045
.................... } 
....................  
004E:  SLEEP

Configuration Fuses:
   Word  1: 3F18   NOWDT NOPUT INTRC_IO NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFF   FCMEN IESO
